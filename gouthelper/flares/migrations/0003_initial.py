# Generated by Django 4.2.6 on 2023-12-05 19:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.datetime


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("labs", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("dateofbirths", "0002_initial"),
        ("medhistorys", "0002_initial"),
        ("flares", "0002_initial"),
        ("genders", "0002_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="historicalflare",
            name="history_user",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="+", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="historicalflare",
            name="urate",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Was a urate level measured during this flare?",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="labs.urate",
                verbose_name="Flare Urate",
            ),
        ),
        migrations.AddField(
            model_name="flare",
            name="dateofbirth",
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="dateofbirths.dateofbirth"),
        ),
        migrations.AddField(
            model_name="flare",
            name="gender",
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="genders.gender"),
        ),
        migrations.AddField(
            model_name="flare",
            name="medhistorys",
            field=models.ManyToManyField(to="medhistorys.medhistory"),
        ),
        migrations.AddField(
            model_name="flare",
            name="urate",
            field=models.OneToOneField(
                blank=True,
                help_text="Was a urate level measured during this flare?",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="labs.urate",
                verbose_name="Flare Urate",
            ),
        ),
        migrations.AddConstraint(
            model_name="flare",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("diagnosed", True),
                    models.Q(("crystal_analysis__isnull", True), ("diagnosed", False)),
                    _connector="OR",
                ),
                name="flares_flare_diagnosed_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="flare",
            constraint=models.CheckConstraint(
                check=models.Q(("date_started__lte", django.db.models.functions.datetime.Now())),
                name="flares_flare_date_started_not_in_future",
            ),
        ),
        migrations.AddConstraint(
            model_name="flare",
            constraint=models.CheckConstraint(
                check=models.Q(("date_ended__gte", models.F("date_started"))), name="flares_flare_start_end_date_valid"
            ),
        ),
        migrations.AddConstraint(
            model_name="flare",
            constraint=models.CheckConstraint(
                check=models.Q(("likelihood__in", ["UNLIKELY", "EQUIVOCAL", "LIKELY"])),
                name="flares_flare_likelihood_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="flare",
            constraint=models.CheckConstraint(
                check=models.Q(("prevalence__in", ["LOW", "MEDIUM", "HIGH"])), name="flares_flare_prevalence_valid"
            ),
        ),
        migrations.AddConstraint(
            model_name="flare",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("joints__contains", "MTP1R"),
                    ("joints__contains", "MTP1L"),
                    ("joints__contains", "RFOOT"),
                    ("joints__contains", "LFOOT"),
                    ("joints__contains", "ANKLER"),
                    ("joints__contains", "ANKLEL"),
                    ("joints__contains", "KNEER"),
                    ("joints__contains", "KNEEL"),
                    ("joints__contains", "HIPR"),
                    ("joints__contains", "HIPL"),
                    ("joints__contains", "RHAND"),
                    ("joints__contains", "LHAND"),
                    ("joints__contains", "WRISTR"),
                    ("joints__contains", "WRISTL"),
                    ("joints__contains", "ELBOWR"),
                    ("joints__contains", "ELBOWL"),
                    ("joints__contains", "SHOULDERR"),
                    ("joints__contains", "SHOULDERL"),
                    _connector="OR",
                ),
                name="flares_flare_joints_valid",
            ),
        ),
    ]
