# Generated by Django 4.2.6 on 2023-11-04 20:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.datetime
import django_extensions.db.fields
import gouthelper.utils.helpers.helpers
import multiselectfield.db.fields
import rules.contrib.models
import simple_history.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("labs", "0001_initial"),
        ("genders", "0001_initial"),
        ("dateofbirths", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("medhistorys", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalFlare",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "crystal_analysis",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Yes"), (False, "No")],
                        default=None,
                        help_text="Did a clinician drain the joint and observe monosodium urate crystals on polarized microscopy?",
                        null=True,
                        verbose_name="Crystal Analysis",
                    ),
                ),
                (
                    "date_ended",
                    models.DateField(
                        blank=True,
                        default=None,
                        help_text="What day did this flare resolve?",
                        null=True,
                        verbose_name="Date Flare Resolved",
                    ),
                ),
                (
                    "date_started",
                    models.DateField(
                        default=gouthelper.utils.helpers.helpers.now_date,
                        help_text="What day did this flare start?",
                        verbose_name="Date Flare Started",
                    ),
                ),
                (
                    "joints",
                    multiselectfield.db.fields.MultiSelectField(
                        choices=[
                            ("MTP1R", "Right big toe"),
                            ("MTP1L", "Left big toe"),
                            ("RFOOT", "Right foot"),
                            ("LFOOT", "Left foot"),
                            ("ANKLER", "Right ankle"),
                            ("ANKLEL", "Left ankle"),
                            ("KNEER", "Right knee"),
                            ("KNEEL", "Left knee"),
                            ("HIPR", "Right hip"),
                            ("HIPL", "Left hip"),
                            ("RHAND", "Right hand"),
                            ("LHAND", "Left hand"),
                            ("WRISTR", "Right wrist"),
                            ("WRISTL", "Left wrist"),
                            ("ELBOWR", "Right elbow"),
                            ("ELBOWL", "Left elbow"),
                            ("SHOULDERR", "Right shoulder"),
                            ("SHOULDERL", "Left shoulder"),
                        ],
                        help_text="What joint(s) did the flare occur in?",
                        max_length=600,
                        verbose_name="Location(s) of Flare",
                    ),
                ),
                (
                    "onset",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Did your symptoms start and reach maximum intensity within 1 day?",
                        verbose_name="Rapid Onset (1 day)",
                    ),
                ),
                (
                    "redness",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Is(are) the joint(s) red (erythematous)?",
                        verbose_name="Redness",
                    ),
                ),
                (
                    "likelihood",
                    models.CharField(
                        blank=True,
                        choices=[("UNLIKELY", "Unlikely"), ("EQUIVOCAL", "Equivocal"), ("LIKELY", "Likely")],
                        default=None,
                        max_length=20,
                        null=True,
                        verbose_name="Likelihood",
                    ),
                ),
                (
                    "prevalence",
                    models.CharField(
                        blank=True,
                        choices=[("LOW", "2.2%"), ("MEDIUM", "31.2%"), ("HIGH", "80.4%")],
                        default=None,
                        max_length=10,
                        null=True,
                        verbose_name="Prevalence",
                    ),
                ),
                (
                    "diagnosed",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Did a clinician diagnose these symptoms as a gout flare?",
                        verbose_name="Clinician Diagnosed",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "dateofbirth",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="dateofbirths.dateofbirth",
                    ),
                ),
                (
                    "gender",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="genders.gender",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "urate",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Was a urate level measured during this flare?",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="labs.urate",
                        verbose_name="Flare Urate",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical flare",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Flare",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "crystal_analysis",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Yes"), (False, "No")],
                        default=None,
                        help_text="Did a clinician drain the joint and observe monosodium urate crystals on polarized microscopy?",
                        null=True,
                        verbose_name="Crystal Analysis",
                    ),
                ),
                (
                    "date_ended",
                    models.DateField(
                        blank=True,
                        default=None,
                        help_text="What day did this flare resolve?",
                        null=True,
                        verbose_name="Date Flare Resolved",
                    ),
                ),
                (
                    "date_started",
                    models.DateField(
                        default=gouthelper.utils.helpers.helpers.now_date,
                        help_text="What day did this flare start?",
                        verbose_name="Date Flare Started",
                    ),
                ),
                (
                    "joints",
                    multiselectfield.db.fields.MultiSelectField(
                        choices=[
                            ("MTP1R", "Right big toe"),
                            ("MTP1L", "Left big toe"),
                            ("RFOOT", "Right foot"),
                            ("LFOOT", "Left foot"),
                            ("ANKLER", "Right ankle"),
                            ("ANKLEL", "Left ankle"),
                            ("KNEER", "Right knee"),
                            ("KNEEL", "Left knee"),
                            ("HIPR", "Right hip"),
                            ("HIPL", "Left hip"),
                            ("RHAND", "Right hand"),
                            ("LHAND", "Left hand"),
                            ("WRISTR", "Right wrist"),
                            ("WRISTL", "Left wrist"),
                            ("ELBOWR", "Right elbow"),
                            ("ELBOWL", "Left elbow"),
                            ("SHOULDERR", "Right shoulder"),
                            ("SHOULDERL", "Left shoulder"),
                        ],
                        help_text="What joint(s) did the flare occur in?",
                        max_length=600,
                        verbose_name="Location(s) of Flare",
                    ),
                ),
                (
                    "onset",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Did your symptoms start and reach maximum intensity within 1 day?",
                        verbose_name="Rapid Onset (1 day)",
                    ),
                ),
                (
                    "redness",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Is(are) the joint(s) red (erythematous)?",
                        verbose_name="Redness",
                    ),
                ),
                (
                    "likelihood",
                    models.CharField(
                        blank=True,
                        choices=[("UNLIKELY", "Unlikely"), ("EQUIVOCAL", "Equivocal"), ("LIKELY", "Likely")],
                        default=None,
                        max_length=20,
                        null=True,
                        verbose_name="Likelihood",
                    ),
                ),
                (
                    "prevalence",
                    models.CharField(
                        blank=True,
                        choices=[("LOW", "2.2%"), ("MEDIUM", "31.2%"), ("HIGH", "80.4%")],
                        default=None,
                        max_length=10,
                        null=True,
                        verbose_name="Prevalence",
                    ),
                ),
                (
                    "diagnosed",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Did a clinician diagnose these symptoms as a gout flare?",
                        verbose_name="Clinician Diagnosed",
                    ),
                ),
                (
                    "dateofbirth",
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="dateofbirths.dateofbirth"),
                ),
                ("gender", models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="genders.gender")),
                ("medhistorys", models.ManyToManyField(to="medhistorys.medhistory")),
                (
                    "urate",
                    models.OneToOneField(
                        blank=True,
                        help_text="Was a urate level measured during this flare?",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="labs.urate",
                        verbose_name="Flare Urate",
                    ),
                ),
            ],
            options={
                "ordering": ["created"],
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.AddConstraint(
            model_name="flare",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("diagnosed", True),
                    models.Q(("crystal_analysis__isnull", True), ("diagnosed", False)),
                    _connector="OR",
                ),
                name="flares_flare_diagnosed_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="flare",
            constraint=models.CheckConstraint(
                check=models.Q(("date_started__lte", django.db.models.functions.datetime.Now())),
                name="flares_flare_date_started_not_in_future",
            ),
        ),
        migrations.AddConstraint(
            model_name="flare",
            constraint=models.CheckConstraint(
                check=models.Q(("date_ended__gte", models.F("date_started"))), name="flares_flare_start_end_date_valid"
            ),
        ),
        migrations.AddConstraint(
            model_name="flare",
            constraint=models.CheckConstraint(
                check=models.Q(("likelihood__in", ["UNLIKELY", "EQUIVOCAL", "LIKELY"])),
                name="flares_flare_likelihood_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="flare",
            constraint=models.CheckConstraint(
                check=models.Q(("prevalence__in", ["LOW", "MEDIUM", "HIGH"])), name="flares_flare_prevalence_valid"
            ),
        ),
        migrations.AddConstraint(
            model_name="flare",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("joints__contains", "MTP1R"),
                    ("joints__contains", "MTP1L"),
                    ("joints__contains", "RFOOT"),
                    ("joints__contains", "LFOOT"),
                    ("joints__contains", "ANKLER"),
                    ("joints__contains", "ANKLEL"),
                    ("joints__contains", "KNEER"),
                    ("joints__contains", "KNEEL"),
                    ("joints__contains", "HIPR"),
                    ("joints__contains", "HIPL"),
                    ("joints__contains", "RHAND"),
                    ("joints__contains", "LHAND"),
                    ("joints__contains", "WRISTR"),
                    ("joints__contains", "WRISTL"),
                    ("joints__contains", "ELBOWR"),
                    ("joints__contains", "ELBOWL"),
                    ("joints__contains", "SHOULDERR"),
                    ("joints__contains", "SHOULDERL"),
                    _connector="OR",
                ),
                name="flares_flare_joints_valid",
            ),
        ),
    ]
