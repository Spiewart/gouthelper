# Generated by Django 4.2.6 on 2023-11-04 20:11

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.datetime
import django.utils.timezone
import django_extensions.db.fields
import gouthelper.labs.models
import rules.contrib.models
import simple_history.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("medhistorys", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="BaselineCreatinine",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "labtype",
                    models.CharField(
                        choices=[("CREATININE", "Creatinine"), ("URATE", "Urate")],
                        editable=False,
                        max_length=30,
                        verbose_name="Lab Type",
                    ),
                ),
                ("lower_limit", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "units",
                    models.CharField(
                        choices=[("MGDL", "mg/dL (milligrams per deciliter)")], max_length=10, verbose_name="Units"
                    ),
                ),
                ("upper_limit", models.DecimalField(decimal_places=2, max_digits=6)),
                ("value", models.DecimalField(decimal_places=2, max_digits=6)),
            ],
            options={
                "abstract": False,
            },
            bases=(gouthelper.labs.models.CreatinineBase, rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBaselineCreatinine",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "labtype",
                    models.CharField(
                        choices=[("CREATININE", "Creatinine"), ("URATE", "Urate")],
                        editable=False,
                        max_length=30,
                        verbose_name="Lab Type",
                    ),
                ),
                ("lower_limit", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "units",
                    models.CharField(
                        choices=[("MGDL", "mg/dL (milligrams per deciliter)")], max_length=10, verbose_name="Units"
                    ),
                ),
                ("upper_limit", models.DecimalField(decimal_places=2, max_digits=6)),
                ("value", models.DecimalField(decimal_places=2, max_digits=6)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
            ],
            options={
                "verbose_name": "historical baseline creatinine",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalHlab5801",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "date_drawn",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, help_text="What day was the HLA-B*5801 drawn?"
                    ),
                ),
                (
                    "value",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        help_text="HLA-B*5801 genotype present?",
                        verbose_name="HLA-B*5801",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
            ],
            options={
                "verbose_name": "historical hlab5801",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalLab",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "labtype",
                    models.CharField(
                        choices=[("CREATININE", "Creatinine"), ("URATE", "Urate")],
                        editable=False,
                        max_length=30,
                        verbose_name="Lab Type",
                    ),
                ),
                ("lower_limit", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "units",
                    models.CharField(
                        choices=[("MGDL", "mg/dL (milligrams per deciliter)")], max_length=10, verbose_name="Units"
                    ),
                ),
                ("upper_limit", models.DecimalField(decimal_places=2, max_digits=6)),
                ("value", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "date_drawn",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, help_text="What day was this lab drawn?"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
            ],
            options={
                "verbose_name": "historical lab",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalUrate",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "labtype",
                    models.CharField(
                        choices=[("CREATININE", "Creatinine"), ("URATE", "Urate")],
                        editable=False,
                        max_length=30,
                        verbose_name="Lab Type",
                    ),
                ),
                ("lower_limit", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "units",
                    models.CharField(
                        choices=[("MGDL", "mg/dL (milligrams per deciliter)")], max_length=10, verbose_name="Units"
                    ),
                ),
                ("upper_limit", models.DecimalField(decimal_places=2, max_digits=6)),
                ("value", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "date_drawn",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, help_text="What day was this lab drawn?"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
            ],
            options={
                "verbose_name": "historical urate",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Hlab5801",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "date_drawn",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, help_text="What day was the HLA-B*5801 drawn?"
                    ),
                ),
                (
                    "value",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        help_text="HLA-B*5801 genotype present?",
                        verbose_name="HLA-B*5801",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Lab",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "labtype",
                    models.CharField(
                        choices=[("CREATININE", "Creatinine"), ("URATE", "Urate")],
                        editable=False,
                        max_length=30,
                        verbose_name="Lab Type",
                    ),
                ),
                ("lower_limit", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "units",
                    models.CharField(
                        choices=[("MGDL", "mg/dL (milligrams per deciliter)")], max_length=10, verbose_name="Units"
                    ),
                ),
                ("upper_limit", models.DecimalField(decimal_places=2, max_digits=6)),
                ("value", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "date_drawn",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, help_text="What day was this lab drawn?"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.AddConstraint(
            model_name="lab",
            constraint=models.CheckConstraint(
                check=models.Q(("labtype__in", ["CREATININE", "URATE"])), name="labs_lab_labtype_valid"
            ),
        ),
        migrations.AddConstraint(
            model_name="lab",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("labtype", "CREATININE"),
                        ("lower_limit", Decimal("0.74")),
                        ("units", "MGDL"),
                        ("upper_limit", Decimal("1.35")),
                    ),
                    models.Q(
                        ("labtype", "URATE"),
                        ("lower_limit", Decimal("3.5")),
                        ("units", "MGDL"),
                        ("upper_limit", Decimal("7.2")),
                        ("value__lte", Decimal("30.00")),
                    ),
                    _connector="OR",
                ),
                name="labs_lab_units_upper_lower_limits_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="lab",
            constraint=models.CheckConstraint(
                check=models.Q(("date_drawn__lte", django.db.models.functions.datetime.Now())),
                name="labs_lab_date_drawn_not_in_future",
            ),
        ),
        migrations.AddField(
            model_name="historicalurate",
            name="history_user",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="+", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="historicallab",
            name="history_user",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="+", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="historicalhlab5801",
            name="history_user",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="+", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="historicalbaselinecreatinine",
            name="history_user",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="+", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="historicalbaselinecreatinine",
            name="medhistory",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="medhistorys.medhistory",
            ),
        ),
        migrations.AddField(
            model_name="baselinecreatinine",
            name="medhistory",
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="medhistorys.medhistory"),
        ),
        migrations.CreateModel(
            name="Urate",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("labs.lab",),
        ),
        migrations.AddConstraint(
            model_name="baselinecreatinine",
            constraint=models.CheckConstraint(
                check=models.Q(("labtype__in", ["CREATININE", "URATE"])), name="labs_baselinecreatinine_labtype_valid"
            ),
        ),
        migrations.AddConstraint(
            model_name="baselinecreatinine",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("labtype", "CREATININE"),
                        ("lower_limit", Decimal("0.74")),
                        ("units", "MGDL"),
                        ("upper_limit", Decimal("1.35")),
                    ),
                    models.Q(
                        ("labtype", "URATE"),
                        ("lower_limit", Decimal("3.5")),
                        ("units", "MGDL"),
                        ("upper_limit", Decimal("7.2")),
                        ("value__lte", Decimal("30.00")),
                    ),
                    _connector="OR",
                ),
                name="labs_baselinecreatinine_units_upper_lower_limits_valid",
            ),
        ),
    ]
