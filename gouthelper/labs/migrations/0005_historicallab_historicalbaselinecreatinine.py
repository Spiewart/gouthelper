# Generated by Django 4.2.6 on 2024-01-10 21:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import simple_history.models
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("medhistorys", "0005_medhistory_medhistorys_medhistory_unique_user"),
        ("labs", "0004_remove_historicallab_history_user_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalLab",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "labtype",
                    models.CharField(
                        choices=[("CREATININE", "Creatinine"), ("URATE", "Urate")],
                        editable=False,
                        max_length=30,
                        verbose_name="Lab Type",
                    ),
                ),
                ("lower_limit", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "units",
                    models.CharField(
                        choices=[("MGDL", "mg/dL (milligrams per deciliter)")], max_length=10, verbose_name="Units"
                    ),
                ),
                ("upper_limit", models.DecimalField(decimal_places=2, max_digits=6)),
                ("value", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "date_drawn",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, help_text="What day was this lab drawn?"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical lab",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBaselineCreatinine",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "labtype",
                    models.CharField(
                        choices=[("CREATININE", "Creatinine"), ("URATE", "Urate")],
                        editable=False,
                        max_length=30,
                        verbose_name="Lab Type",
                    ),
                ),
                ("lower_limit", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "units",
                    models.CharField(
                        choices=[("MGDL", "mg/dL (milligrams per deciliter)")], max_length=10, verbose_name="Units"
                    ),
                ),
                ("upper_limit", models.DecimalField(decimal_places=2, max_digits=6)),
                ("value", models.DecimalField(decimal_places=2, max_digits=6)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "medhistory",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="medhistorys.medhistory",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical baseline creatinine",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
