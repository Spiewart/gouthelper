# Generated by Django 4.2.6 on 2024-03-15 22:33

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import rules.contrib.models
import simple_history.models
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("ppxaids", "0004_remove_ppxaid_medallergys_remove_ppxaid_medhistorys"),
        ("flareaids", "0005_remove_flareaid_medallergys_and_more"),
        ("ultaids", "0005_alter_ultaid_ethnicity"),
        ("defaults", "0005_remove_defaultppxtrtsettings_defaults_defaultppxtrtsettings_gouthelper_default_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="FlareAidSettings",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "colch_ckd",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use renally-dosed colchicine in Ckd?",
                        verbose_name="Colchicine with Ckd",
                    ),
                ),
                (
                    "colch_dose_adjust",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="If colchicine will be adjusted for CKD, adjust dose? Otherwise will adjust frequency.",
                        verbose_name="Colchicine Dose vs Frequency Adjustment",
                    ),
                ),
                (
                    "flaretrt1",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="NAPROXEN",
                        max_length=50,
                        verbose_name="Flare Treatment Option 1",
                    ),
                ),
                (
                    "flaretrt2",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="COLCHICINE",
                        max_length=50,
                        verbose_name="Flare Treatment Option 2",
                    ),
                ),
                (
                    "flaretrt3",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="PREDNISONE",
                        max_length=50,
                        verbose_name="Flare Treatment Option 3",
                    ),
                ),
                (
                    "flaretrt4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Flare Treatment Option 4",
                    ),
                ),
                (
                    "flaretrt5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Flare Treatment Option 5",
                    ),
                ),
                (
                    "nsaid_age",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use NSAIDs after age 65?",
                        verbose_name="NSAIDs after age 65",
                    ),
                ),
                (
                    "nsaids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all NSAIDs as equivalent?",
                        verbose_name="Treat all NSAIDs as equivalent?",
                    ),
                ),
                (
                    "pred_dm",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use low-dose steroids with diabetes?",
                        verbose_name="Steroids with Diabetes",
                    ),
                ),
                (
                    "steroids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all corticosteroids as equivalent?",
                        verbose_name="Treat all corticosteroids as equivalent?",
                    ),
                ),
                (
                    "flareaid",
                    models.OneToOneField(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="flareaids.flareaid"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFlareAidSettings",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "colch_ckd",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use renally-dosed colchicine in Ckd?",
                        verbose_name="Colchicine with Ckd",
                    ),
                ),
                (
                    "colch_dose_adjust",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="If colchicine will be adjusted for CKD, adjust dose? Otherwise will adjust frequency.",
                        verbose_name="Colchicine Dose vs Frequency Adjustment",
                    ),
                ),
                (
                    "flaretrt1",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="NAPROXEN",
                        max_length=50,
                        verbose_name="Flare Treatment Option 1",
                    ),
                ),
                (
                    "flaretrt2",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="COLCHICINE",
                        max_length=50,
                        verbose_name="Flare Treatment Option 2",
                    ),
                ),
                (
                    "flaretrt3",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="PREDNISONE",
                        max_length=50,
                        verbose_name="Flare Treatment Option 3",
                    ),
                ),
                (
                    "flaretrt4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Flare Treatment Option 4",
                    ),
                ),
                (
                    "flaretrt5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Flare Treatment Option 5",
                    ),
                ),
                (
                    "nsaid_age",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use NSAIDs after age 65?",
                        verbose_name="NSAIDs after age 65",
                    ),
                ),
                (
                    "nsaids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all NSAIDs as equivalent?",
                        verbose_name="Treat all NSAIDs as equivalent?",
                    ),
                ),
                (
                    "pred_dm",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use low-dose steroids with diabetes?",
                        verbose_name="Steroids with Diabetes",
                    ),
                ),
                (
                    "steroids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all corticosteroids as equivalent?",
                        verbose_name="Treat all corticosteroids as equivalent?",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "flareaid",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="flareaids.flareaid",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical flare aid settings",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPpxAidSettings",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "colch_ckd",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use renally-dosed colchicine in Ckd?",
                        verbose_name="Colchicine with Ckd",
                    ),
                ),
                (
                    "colch_dose_adjust",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="If colchicine will be adjusted for CKD, adjust dose? Otherwise will adjust frequency.",
                        verbose_name="Colchicine Dose vs Frequency Adjustment",
                    ),
                ),
                (
                    "ppxtrt1",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="NAPROXEN",
                        max_length=50,
                        verbose_name="Ppx Treatment Option 1",
                    ),
                ),
                (
                    "ppxtrt2",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="COLCHICINE",
                        max_length=50,
                        verbose_name="Ppx Treatment Option 2",
                    ),
                ),
                (
                    "ppxtrt3",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="PREDNISONE",
                        max_length=50,
                        verbose_name="Ppx Treatment Option 3",
                    ),
                ),
                (
                    "ppxtrt4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Ppx Treatment Option 4",
                    ),
                ),
                (
                    "ppxtrt5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Ppx Treatment Option 5",
                    ),
                ),
                (
                    "nsaid_age",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use NSAIDs after age 65?",
                        verbose_name="NSAIDs after age 65",
                    ),
                ),
                (
                    "nsaids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all NSAIDs as equivalent?",
                        verbose_name="Treat all NSAIDs as equivalent?",
                    ),
                ),
                (
                    "pred_dm",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use low-dose steroids with diabetes?",
                        verbose_name="Steroids with Diabetes",
                    ),
                ),
                (
                    "steroids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all corticosteroids as equivalent?",
                        verbose_name="Treat all corticosteroids as equivalent?",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ppxaid",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="ppxaids.ppxaid",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ppx aid settings",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalUltAidSettings",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "allo_ckd_fixed_dose",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use fixed dose allopurinol in CKD?",
                        verbose_name="Allopurinol CKD Fixed Dose",
                    ),
                ),
                (
                    "allo_dialysis",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use allopurinol in dialysis?",
                        verbose_name="Allopurinol in Dialysis",
                    ),
                ),
                (
                    "allo_no_ethnicity_no_hlab5801",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use allopurinol without knowing ethnicity and HLA-B*5801?",
                        verbose_name="Allopurinol / without ethnicity / HLA-B*5801",
                    ),
                ),
                (
                    "allo_risk_ethnicity_no_hlab5801",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Use allopurinol in high risk ethnicity without HLA-B*5801?",
                        verbose_name="Allopurinol / high risk ethnicity / no HLA-B*5801",
                    ),
                ),
                (
                    "febu_ckd_initial_dose",
                    models.DecimalField(
                        decimal_places=1,
                        default=Decimal("20"),
                        help_text="What is initial febuxostat dose in CKD?",
                        max_digits=5,
                        verbose_name="Initial Febuxostat CKD Dose",
                    ),
                ),
                (
                    "febu_cv_disease",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use febuxostat in the setting of cardiovascular disease?",
                        verbose_name="Febuxostat with cardiovascular disease?",
                    ),
                ),
                (
                    "prob_ckd_stage_contra",
                    models.IntegerField(
                        choices=[(None, "----"), (1, "I"), (2, "II"), (3, "III"), (4, "IV"), (5, "V")],
                        default=3,
                        help_text="What is the CKD stage at which probenecid is contraindicated?",
                        verbose_name="Probenecid CKD Stage Contraindication",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ultaid",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="ultaids.ultaid",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ult aid settings",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="PpxAidSettings",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "colch_ckd",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use renally-dosed colchicine in Ckd?",
                        verbose_name="Colchicine with Ckd",
                    ),
                ),
                (
                    "colch_dose_adjust",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="If colchicine will be adjusted for CKD, adjust dose? Otherwise will adjust frequency.",
                        verbose_name="Colchicine Dose vs Frequency Adjustment",
                    ),
                ),
                (
                    "ppxtrt1",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="NAPROXEN",
                        max_length=50,
                        verbose_name="Ppx Treatment Option 1",
                    ),
                ),
                (
                    "ppxtrt2",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="COLCHICINE",
                        max_length=50,
                        verbose_name="Ppx Treatment Option 2",
                    ),
                ),
                (
                    "ppxtrt3",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="PREDNISONE",
                        max_length=50,
                        verbose_name="Ppx Treatment Option 3",
                    ),
                ),
                (
                    "ppxtrt4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Ppx Treatment Option 4",
                    ),
                ),
                (
                    "ppxtrt5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Ppx Treatment Option 5",
                    ),
                ),
                (
                    "nsaid_age",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use NSAIDs after age 65?",
                        verbose_name="NSAIDs after age 65",
                    ),
                ),
                (
                    "nsaids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all NSAIDs as equivalent?",
                        verbose_name="Treat all NSAIDs as equivalent?",
                    ),
                ),
                (
                    "pred_dm",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use low-dose steroids with diabetes?",
                        verbose_name="Steroids with Diabetes",
                    ),
                ),
                (
                    "steroids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all corticosteroids as equivalent?",
                        verbose_name="Treat all corticosteroids as equivalent?",
                    ),
                ),
                (
                    "ppxaid",
                    models.OneToOneField(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="ppxaids.ppxaid"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="UltAidSettings",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "allo_ckd_fixed_dose",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use fixed dose allopurinol in CKD?",
                        verbose_name="Allopurinol CKD Fixed Dose",
                    ),
                ),
                (
                    "allo_dialysis",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use allopurinol in dialysis?",
                        verbose_name="Allopurinol in Dialysis",
                    ),
                ),
                (
                    "allo_no_ethnicity_no_hlab5801",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use allopurinol without knowing ethnicity and HLA-B*5801?",
                        verbose_name="Allopurinol / without ethnicity / HLA-B*5801",
                    ),
                ),
                (
                    "allo_risk_ethnicity_no_hlab5801",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Use allopurinol in high risk ethnicity without HLA-B*5801?",
                        verbose_name="Allopurinol / high risk ethnicity / no HLA-B*5801",
                    ),
                ),
                (
                    "febu_ckd_initial_dose",
                    models.DecimalField(
                        decimal_places=1,
                        default=Decimal("20"),
                        help_text="What is initial febuxostat dose in CKD?",
                        max_digits=5,
                        verbose_name="Initial Febuxostat CKD Dose",
                    ),
                ),
                (
                    "febu_cv_disease",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use febuxostat in the setting of cardiovascular disease?",
                        verbose_name="Febuxostat with cardiovascular disease?",
                    ),
                ),
                (
                    "prob_ckd_stage_contra",
                    models.IntegerField(
                        choices=[(None, "----"), (1, "I"), (2, "II"), (3, "III"), (4, "IV"), (5, "V")],
                        default=3,
                        help_text="What is the CKD stage at which probenecid is contraindicated?",
                        verbose_name="Probenecid CKD Stage Contraindication",
                    ),
                ),
                (
                    "ultaid",
                    models.OneToOneField(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="ultaids.ultaid"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.RemoveField(
            model_name="defaultppxtrtsettings",
            name="user",
        ),
        migrations.RemoveField(
            model_name="defaultulttrtsettings",
            name="user",
        ),
        migrations.RemoveField(
            model_name="historicaldefaultflaretrtsettings",
            name="history_user",
        ),
        migrations.RemoveField(
            model_name="historicaldefaultflaretrtsettings",
            name="user",
        ),
        migrations.RemoveField(
            model_name="historicaldefaultppxtrtsettings",
            name="history_user",
        ),
        migrations.RemoveField(
            model_name="historicaldefaultppxtrtsettings",
            name="user",
        ),
        migrations.RemoveField(
            model_name="historicaldefaultulttrtsettings",
            name="history_user",
        ),
        migrations.RemoveField(
            model_name="historicaldefaultulttrtsettings",
            name="user",
        ),
        migrations.DeleteModel(
            name="DefaultFlareTrtSettings",
        ),
        migrations.DeleteModel(
            name="DefaultPpxTrtSettings",
        ),
        migrations.DeleteModel(
            name="DefaultUltTrtSettings",
        ),
        migrations.DeleteModel(
            name="HistoricalDefaultFlareTrtSettings",
        ),
        migrations.DeleteModel(
            name="HistoricalDefaultPpxTrtSettings",
        ),
        migrations.DeleteModel(
            name="HistoricalDefaultUltTrtSettings",
        ),
        migrations.AddConstraint(
            model_name="ultaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "febu_ckd_initial_dose__in",
                        [Decimal("20"), Decimal("40"), Decimal("60"), Decimal("80"), Decimal("100"), Decimal("120")],
                    )
                ),
                name="defaults_ultaidsettings_initial_febuxostat_dose_ckd",
            ),
        ),
        migrations.AddConstraint(
            model_name="ultaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(("prob_ckd_stage_contra__in", [None, 1, 2, 3, 4, 5])),
                name="defaults_ultaidsettings_prob_ckd_contra_stage_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="ultaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("user__isnull", False), ("ultaid__isnull", True)),
                    models.Q(("user__isnull", True), ("ultaid__isnull", False)),
                    models.Q(("user__isnull", True), ("ultaid__isnull", True)),
                    _connector="OR",
                ),
                name="defaults_ultaidsettings_user_ultaid_exclusive",
            ),
        ),
        migrations.AddConstraint(
            model_name="ppxaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "ppxtrt1__in",
                        [
                            "ALLOPURINOL",
                            "CELECOXIB",
                            "COLCHICINE",
                            "DICLOFENAC",
                            "FEBUXOSTAT",
                            "IBUPROFEN",
                            "INDOMETHACIN",
                            "MELOXICAM",
                            "METHYLPREDNISOLONE",
                            "NAPROXEN",
                            "PREDNISONE",
                            "PROBENECID",
                        ],
                    )
                ),
                name="defaults_ppxaidsettings_ppxtrt1_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="ppxaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "ppxtrt2__in",
                        [
                            "ALLOPURINOL",
                            "CELECOXIB",
                            "COLCHICINE",
                            "DICLOFENAC",
                            "FEBUXOSTAT",
                            "IBUPROFEN",
                            "INDOMETHACIN",
                            "MELOXICAM",
                            "METHYLPREDNISOLONE",
                            "NAPROXEN",
                            "PREDNISONE",
                            "PROBENECID",
                        ],
                    )
                ),
                name="defaults_ppxaidsettings_ppxtrt2_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="ppxaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "ppxtrt3__in",
                        [
                            "ALLOPURINOL",
                            "CELECOXIB",
                            "COLCHICINE",
                            "DICLOFENAC",
                            "FEBUXOSTAT",
                            "IBUPROFEN",
                            "INDOMETHACIN",
                            "MELOXICAM",
                            "METHYLPREDNISOLONE",
                            "NAPROXEN",
                            "PREDNISONE",
                            "PROBENECID",
                        ],
                    )
                ),
                name="defaults_ppxaidsettings_ppxtrt3_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="ppxaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "ppxtrt4__in",
                        [
                            "ALLOPURINOL",
                            "CELECOXIB",
                            "COLCHICINE",
                            "DICLOFENAC",
                            "FEBUXOSTAT",
                            "IBUPROFEN",
                            "INDOMETHACIN",
                            "MELOXICAM",
                            "METHYLPREDNISOLONE",
                            "NAPROXEN",
                            "PREDNISONE",
                            "PROBENECID",
                        ],
                    )
                ),
                name="defaults_ppxaidsettings_ppxtrt4_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="ppxaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "ppxtrt5__in",
                        [
                            "ALLOPURINOL",
                            "CELECOXIB",
                            "COLCHICINE",
                            "DICLOFENAC",
                            "FEBUXOSTAT",
                            "IBUPROFEN",
                            "INDOMETHACIN",
                            "MELOXICAM",
                            "METHYLPREDNISOLONE",
                            "NAPROXEN",
                            "PREDNISONE",
                            "PROBENECID",
                        ],
                    )
                ),
                name="defaults_ppxaidsettings_ppxtrt5_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="ppxaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("user__isnull", False), ("ppxaid__isnull", True)),
                    models.Q(("user__isnull", True), ("ppxaid__isnull", False)),
                    models.Q(("user__isnull", True), ("ppxaid__isnull", True)),
                    _connector="OR",
                ),
                name="defaults_ppxaidsettings_user_ppxaid_exclusive",
            ),
        ),
        migrations.AddConstraint(
            model_name="flareaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "flaretrt1__in",
                        [
                            "ALLOPURINOL",
                            "CELECOXIB",
                            "COLCHICINE",
                            "DICLOFENAC",
                            "FEBUXOSTAT",
                            "IBUPROFEN",
                            "INDOMETHACIN",
                            "MELOXICAM",
                            "METHYLPREDNISOLONE",
                            "NAPROXEN",
                            "PREDNISONE",
                            "PROBENECID",
                        ],
                    )
                ),
                name="defaults_flareaidsettings_flaretrt1_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="flareaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "flaretrt2__in",
                        [
                            "ALLOPURINOL",
                            "CELECOXIB",
                            "COLCHICINE",
                            "DICLOFENAC",
                            "FEBUXOSTAT",
                            "IBUPROFEN",
                            "INDOMETHACIN",
                            "MELOXICAM",
                            "METHYLPREDNISOLONE",
                            "NAPROXEN",
                            "PREDNISONE",
                            "PROBENECID",
                        ],
                    )
                ),
                name="defaults_flareaidsettings_flaretrt2_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="flareaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "flaretrt3__in",
                        [
                            "ALLOPURINOL",
                            "CELECOXIB",
                            "COLCHICINE",
                            "DICLOFENAC",
                            "FEBUXOSTAT",
                            "IBUPROFEN",
                            "INDOMETHACIN",
                            "MELOXICAM",
                            "METHYLPREDNISOLONE",
                            "NAPROXEN",
                            "PREDNISONE",
                            "PROBENECID",
                        ],
                    )
                ),
                name="defaults_flareaidsettings_flaretrt3_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="flareaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "flaretrt4__in",
                        [
                            "ALLOPURINOL",
                            "CELECOXIB",
                            "COLCHICINE",
                            "DICLOFENAC",
                            "FEBUXOSTAT",
                            "IBUPROFEN",
                            "INDOMETHACIN",
                            "MELOXICAM",
                            "METHYLPREDNISOLONE",
                            "NAPROXEN",
                            "PREDNISONE",
                            "PROBENECID",
                        ],
                    )
                ),
                name="defaults_flareaidsettings_flaretrt4_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="flareaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "flaretrt5__in",
                        [
                            "ALLOPURINOL",
                            "CELECOXIB",
                            "COLCHICINE",
                            "DICLOFENAC",
                            "FEBUXOSTAT",
                            "IBUPROFEN",
                            "INDOMETHACIN",
                            "MELOXICAM",
                            "METHYLPREDNISOLONE",
                            "NAPROXEN",
                            "PREDNISONE",
                            "PROBENECID",
                        ],
                    )
                ),
                name="defaults_flareaidsettings_flaretrt5_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="flareaidsettings",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("user__isnull", False), ("flareaid__isnull", True)),
                    models.Q(("user__isnull", True), ("flareaid__isnull", False)),
                    models.Q(("user__isnull", True), ("flareaid__isnull", True)),
                    _connector="OR",
                ),
                name="defaults_flareaidsettings_user_flareaid_exclusive",
            ),
        ),
    ]
