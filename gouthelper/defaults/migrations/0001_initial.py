# Generated by Django 4.2.6 on 2023-12-05 19:33

import datetime
from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django_extensions.db.fields
import rules.contrib.models
import simple_history.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DefaultFlareTrtSettings",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "colch_ckd",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use renally-dosed colchicine in Ckd?",
                        verbose_name="Colchicine with Ckd",
                    ),
                ),
                (
                    "colch_dose_adjust",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="If colchicine will be adjusted for CKD, adjust dose? Otherwise will adjust frequency.",
                        verbose_name="Colchicine Dose vs Frequency Adjustment",
                    ),
                ),
                (
                    "flaretrt1",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="NAPROXEN",
                        max_length=50,
                        verbose_name="Flare Treatment Option 1",
                    ),
                ),
                (
                    "flaretrt2",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="COLCHICINE",
                        max_length=50,
                        verbose_name="Flare Treatment Option 2",
                    ),
                ),
                (
                    "flaretrt3",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="PREDNISONE",
                        max_length=50,
                        verbose_name="Flare Treatment Option 3",
                    ),
                ),
                (
                    "flaretrt4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Flare Treatment Option 4",
                    ),
                ),
                (
                    "flaretrt5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Flare Treatment Option 5",
                    ),
                ),
                (
                    "nsaid_age",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use NSAIDs after age 65?",
                        verbose_name="NSAIDs after age 65",
                    ),
                ),
                (
                    "nsaids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all NSAIDs as equivalent?",
                        verbose_name="Treat all NSAIDs as equivalent?",
                    ),
                ),
                (
                    "pred_dm",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use low-dose steroids with diabetes?",
                        verbose_name="Steroids with Diabetes",
                    ),
                ),
                (
                    "steroids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all corticosteroids as equivalent?",
                        verbose_name="Treat all corticosteroids as equivalent?",
                    ),
                ),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="DefaultMedHistory",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "contraindication",
                    models.IntegerField(
                        choices=[(0, "Absolute"), (1, "Relative"), (2, "Dose Adjustment Required")],
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(2),
                        ],
                    ),
                ),
                (
                    "medhistorytype",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOLHYPERSENSITIVITY", "Allopurinol Hypersensitivity Syndrome"),
                            ("ANGINA", "Angina"),
                            ("ANTICOAGULATION", "Anticoagulation"),
                            ("BLEED", "Bleed"),
                            ("CAD", "Coronary Artery Disease"),
                            ("CHF", "Congestive Heart Failure"),
                            ("CKD", "Chronic Kidney Disease"),
                            ("COLCHICINEINTERACTION", "Colchicine Medication Interaction"),
                            ("DIABETES", "Diabetes"),
                            ("EROSIONS", "Erosions"),
                            ("FEBUXOSTATHYPERSENSITIVITY", "Febuxostat Hypersensitivity Syndrome"),
                            ("GASTRICBYPASS", "Gastric Bypass"),
                            ("GOUT", "Gout"),
                            ("HEARTATTACK", "Heart Attack"),
                            ("HYPERTENSION", "Hypertension"),
                            ("HYPERURICEMIA", "Hyperuricemia"),
                            ("IBD", "Inflammatory Bowel Disease"),
                            ("MENOPAUSE", "Post-Menopausal"),
                            ("ORGANTRANSPLANT", "Organ Transplant"),
                            ("OSTEOPOROSIS", "Osteoporosis"),
                            ("PVD", "Peripheral Vascular Disease"),
                            ("STROKE", "Stroke"),
                            ("TOPHI", "Tophi"),
                            ("URATESTONES", "Urate kidney stones"),
                            ("XOIINTERACTION", "Xanthine Oxidase Inhibitor Medication Interaction"),
                        ],
                        max_length=30,
                        verbose_name="History Type",
                    ),
                ),
                (
                    "treatment",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        max_length=50,
                        verbose_name="Treatment",
                    ),
                ),
                (
                    "trttype",
                    models.IntegerField(
                        choices=[(0, "Urate-lowering therapy"), (1, "Flare"), (2, "Prophylaxis")],
                        help_text="What type of gout medication is this?",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(2),
                        ],
                        verbose_name="Treatment Type",
                    ),
                ),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="DefaultPpxTrtSettings",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "colch_ckd",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use renally-dosed colchicine in Ckd?",
                        verbose_name="Colchicine with Ckd",
                    ),
                ),
                (
                    "colch_dose_adjust",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="If colchicine will be adjusted for CKD, adjust dose? Otherwise will adjust frequency.",
                        verbose_name="Colchicine Dose vs Frequency Adjustment",
                    ),
                ),
                (
                    "ppxtrt1",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="NAPROXEN",
                        max_length=50,
                        verbose_name="Ppx Treatment Option 1",
                    ),
                ),
                (
                    "ppxtrt2",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="COLCHICINE",
                        max_length=50,
                        verbose_name="Ppx Treatment Option 2",
                    ),
                ),
                (
                    "ppxtrt3",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="PREDNISONE",
                        max_length=50,
                        verbose_name="Ppx Treatment Option 3",
                    ),
                ),
                (
                    "ppxtrt4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Ppx Treatment Option 4",
                    ),
                ),
                (
                    "ppxtrt5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Ppx Treatment Option 5",
                    ),
                ),
                (
                    "nsaid_age",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use NSAIDs after age 65?",
                        verbose_name="NSAIDs after age 65",
                    ),
                ),
                (
                    "nsaids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all NSAIDs as equivalent?",
                        verbose_name="Treat all NSAIDs as equivalent?",
                    ),
                ),
                (
                    "pred_dm",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use low-dose steroids with diabetes?",
                        verbose_name="Steroids with Diabetes",
                    ),
                ),
                (
                    "steroids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all corticosteroids as equivalent?",
                        verbose_name="Treat all corticosteroids as equivalent?",
                    ),
                ),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="DefaultTrt",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "trttype",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Urate-lowering therapy"), (1, "Flare"), (2, "Prophylaxis")],
                        help_text="What type of gout medication is this?",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(2),
                        ],
                        verbose_name="Treatment Type",
                    ),
                ),
                (
                    "treatment",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Treatment",
                    ),
                ),
                (
                    "dose",
                    models.DecimalField(
                        decimal_places=1, help_text="What is the dose?", max_digits=5, verbose_name="Dose"
                    ),
                ),
                (
                    "dose2",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        default=None,
                        help_text="What is the second dose?",
                        max_digits=5,
                        null=True,
                        verbose_name="Second Dose",
                    ),
                ),
                (
                    "dose3",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        default=None,
                        help_text="What is the third dose?",
                        max_digits=5,
                        null=True,
                        verbose_name="Third Dose",
                    ),
                ),
                (
                    "dose_adj",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="What is the standard dose adjustment?",
                        max_digits=5,
                        verbose_name="Dose Adjustment",
                    ),
                ),
                (
                    "max_dose",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="What is the maximum dose?",
                        max_digits=5,
                        verbose_name="Maximum Dose",
                    ),
                ),
                (
                    "duration",
                    models.DurationField(
                        blank=True,
                        default=None,
                        help_text="How long is the medication taken for?",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(datetime.timedelta(days=31)),
                            django.core.validators.MinValueValidator(datetime.timedelta(0)),
                        ],
                        verbose_name="Duration",
                    ),
                ),
                (
                    "duration2",
                    models.DurationField(
                        blank=True,
                        default=None,
                        help_text="How long is the second dose taken for??",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(datetime.timedelta(days=31)),
                            django.core.validators.MinValueValidator(datetime.timedelta(0)),
                        ],
                        verbose_name="Second Duration",
                    ),
                ),
                (
                    "duration3",
                    models.DurationField(
                        blank=True,
                        default=None,
                        help_text="How long is the third dose taken for?",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(datetime.timedelta(days=31)),
                            django.core.validators.MinValueValidator(datetime.timedelta(0)),
                        ],
                        verbose_name="Third Duration",
                    ),
                ),
                (
                    "freq",
                    models.CharField(
                        choices=[
                            ("BID", "Twice daily"),
                            ("BIW", "Twice weekly"),
                            ("ONCE", "Once"),
                            ("QDAY", "Daily"),
                            ("QID", "Four times daily"),
                            ("QOTHERDAY", "Every other day"),
                            ("QWEEK", "Weekly"),
                            ("TID", "Three times daily"),
                            ("TIW", "Three times weekly"),
                        ],
                        help_text="How often is this taken?",
                        max_length=50,
                        verbose_name="Frequency",
                    ),
                ),
                (
                    "freq2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BID", "Twice daily"),
                            ("BIW", "Twice weekly"),
                            ("ONCE", "Once"),
                            ("QDAY", "Daily"),
                            ("QID", "Four times daily"),
                            ("QOTHERDAY", "Every other day"),
                            ("QWEEK", "Weekly"),
                            ("TID", "Three times daily"),
                            ("TIW", "Three times weekly"),
                        ],
                        default=None,
                        help_text="How often is the second dose taken?",
                        max_length=50,
                        null=True,
                        verbose_name="Second Frequency",
                    ),
                ),
                (
                    "freq3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BID", "Twice daily"),
                            ("BIW", "Twice weekly"),
                            ("ONCE", "Once"),
                            ("QDAY", "Daily"),
                            ("QID", "Four times daily"),
                            ("QOTHERDAY", "Every other day"),
                            ("QWEEK", "Weekly"),
                            ("TID", "Three times daily"),
                            ("TIW", "Three times weekly"),
                        ],
                        default=None,
                        help_text="How often is the third dose taken?",
                        max_length=50,
                        null=True,
                        verbose_name="Third Frequency",
                    ),
                ),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="DefaultUltTrtSettings",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "allo_ckd_fixed_dose",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use fixed dose allopurinol in CKD?",
                        verbose_name="Allopurinol CKD Fixed Dose",
                    ),
                ),
                (
                    "allo_dialysis",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use allopurinol in dialysis?",
                        verbose_name="Allopurinol in Dialysis",
                    ),
                ),
                (
                    "allo_no_ethnicity_no_hlab5801",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use allopurinol without knowing ethnicity and HLA-B*5801?",
                        verbose_name="Allopurinol / without ethnicity / HLA-B*5801",
                    ),
                ),
                (
                    "allo_risk_ethnicity_no_hlab5801",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Use allopurinol in high risk ethnicity without HLA-B*5801?",
                        verbose_name="Allopurinol / high risk ethnicity / no HLA-B*5801",
                    ),
                ),
                (
                    "febu_ckd_initial_dose",
                    models.DecimalField(
                        decimal_places=1,
                        default=Decimal("20"),
                        help_text="What is initial febuxostat dose in CKD?",
                        max_digits=5,
                        verbose_name="Initial Febuxostat CKD Dose",
                    ),
                ),
                (
                    "febu_cv_disease",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use febuxostat in the setting of cardiovascular disease?",
                        verbose_name="Febuxostat with cardiovascular disease?",
                    ),
                ),
                (
                    "prob_ckd_stage_contra",
                    models.IntegerField(
                        choices=[(None, "----"), (1, "I"), (2, "II"), (3, "III"), (4, "IV"), (5, "V")],
                        default=3,
                        help_text="What is the CKD stage at which probenecid is contraindicated?",
                        verbose_name="Probenecid CKD Stage Contraindication",
                    ),
                ),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDefaultFlareTrtSettings",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "colch_ckd",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use renally-dosed colchicine in Ckd?",
                        verbose_name="Colchicine with Ckd",
                    ),
                ),
                (
                    "colch_dose_adjust",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="If colchicine will be adjusted for CKD, adjust dose? Otherwise will adjust frequency.",
                        verbose_name="Colchicine Dose vs Frequency Adjustment",
                    ),
                ),
                (
                    "flaretrt1",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="NAPROXEN",
                        max_length=50,
                        verbose_name="Flare Treatment Option 1",
                    ),
                ),
                (
                    "flaretrt2",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="COLCHICINE",
                        max_length=50,
                        verbose_name="Flare Treatment Option 2",
                    ),
                ),
                (
                    "flaretrt3",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="PREDNISONE",
                        max_length=50,
                        verbose_name="Flare Treatment Option 3",
                    ),
                ),
                (
                    "flaretrt4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Flare Treatment Option 4",
                    ),
                ),
                (
                    "flaretrt5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Flare Treatment Option 5",
                    ),
                ),
                (
                    "nsaid_age",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use NSAIDs after age 65?",
                        verbose_name="NSAIDs after age 65",
                    ),
                ),
                (
                    "nsaids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all NSAIDs as equivalent?",
                        verbose_name="Treat all NSAIDs as equivalent?",
                    ),
                ),
                (
                    "pred_dm",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use low-dose steroids with diabetes?",
                        verbose_name="Steroids with Diabetes",
                    ),
                ),
                (
                    "steroids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all corticosteroids as equivalent?",
                        verbose_name="Treat all corticosteroids as equivalent?",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
            ],
            options={
                "verbose_name": "historical default flare trt settings",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDefaultPpxTrtSettings",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "colch_ckd",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use renally-dosed colchicine in Ckd?",
                        verbose_name="Colchicine with Ckd",
                    ),
                ),
                (
                    "colch_dose_adjust",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="If colchicine will be adjusted for CKD, adjust dose? Otherwise will adjust frequency.",
                        verbose_name="Colchicine Dose vs Frequency Adjustment",
                    ),
                ),
                (
                    "ppxtrt1",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="NAPROXEN",
                        max_length=50,
                        verbose_name="Ppx Treatment Option 1",
                    ),
                ),
                (
                    "ppxtrt2",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="COLCHICINE",
                        max_length=50,
                        verbose_name="Ppx Treatment Option 2",
                    ),
                ),
                (
                    "ppxtrt3",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default="PREDNISONE",
                        max_length=50,
                        verbose_name="Ppx Treatment Option 3",
                    ),
                ),
                (
                    "ppxtrt4",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Ppx Treatment Option 4",
                    ),
                ),
                (
                    "ppxtrt5",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                        verbose_name="Ppx Treatment Option 5",
                    ),
                ),
                (
                    "nsaid_age",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use NSAIDs after age 65?",
                        verbose_name="NSAIDs after age 65",
                    ),
                ),
                (
                    "nsaids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all NSAIDs as equivalent?",
                        verbose_name="Treat all NSAIDs as equivalent?",
                    ),
                ),
                (
                    "pred_dm",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use low-dose steroids with diabetes?",
                        verbose_name="Steroids with Diabetes",
                    ),
                ),
                (
                    "steroids_equivalent",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Treat all corticosteroids as equivalent?",
                        verbose_name="Treat all corticosteroids as equivalent?",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
            ],
            options={
                "verbose_name": "historical default ppx trt settings",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDefaultTrt",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "trttype",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Urate-lowering therapy"), (1, "Flare"), (2, "Prophylaxis")],
                        help_text="What type of gout medication is this?",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(2),
                        ],
                        verbose_name="Treatment Type",
                    ),
                ),
                (
                    "treatment",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Treatment",
                    ),
                ),
                (
                    "dose",
                    models.DecimalField(
                        decimal_places=1, help_text="What is the dose?", max_digits=5, verbose_name="Dose"
                    ),
                ),
                (
                    "dose2",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        default=None,
                        help_text="What is the second dose?",
                        max_digits=5,
                        null=True,
                        verbose_name="Second Dose",
                    ),
                ),
                (
                    "dose3",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        default=None,
                        help_text="What is the third dose?",
                        max_digits=5,
                        null=True,
                        verbose_name="Third Dose",
                    ),
                ),
                (
                    "dose_adj",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="What is the standard dose adjustment?",
                        max_digits=5,
                        verbose_name="Dose Adjustment",
                    ),
                ),
                (
                    "max_dose",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="What is the maximum dose?",
                        max_digits=5,
                        verbose_name="Maximum Dose",
                    ),
                ),
                (
                    "duration",
                    models.DurationField(
                        blank=True,
                        default=None,
                        help_text="How long is the medication taken for?",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(datetime.timedelta(days=31)),
                            django.core.validators.MinValueValidator(datetime.timedelta(0)),
                        ],
                        verbose_name="Duration",
                    ),
                ),
                (
                    "duration2",
                    models.DurationField(
                        blank=True,
                        default=None,
                        help_text="How long is the second dose taken for??",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(datetime.timedelta(days=31)),
                            django.core.validators.MinValueValidator(datetime.timedelta(0)),
                        ],
                        verbose_name="Second Duration",
                    ),
                ),
                (
                    "duration3",
                    models.DurationField(
                        blank=True,
                        default=None,
                        help_text="How long is the third dose taken for?",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(datetime.timedelta(days=31)),
                            django.core.validators.MinValueValidator(datetime.timedelta(0)),
                        ],
                        verbose_name="Third Duration",
                    ),
                ),
                (
                    "freq",
                    models.CharField(
                        choices=[
                            ("BID", "Twice daily"),
                            ("BIW", "Twice weekly"),
                            ("ONCE", "Once"),
                            ("QDAY", "Daily"),
                            ("QID", "Four times daily"),
                            ("QOTHERDAY", "Every other day"),
                            ("QWEEK", "Weekly"),
                            ("TID", "Three times daily"),
                            ("TIW", "Three times weekly"),
                        ],
                        help_text="How often is this taken?",
                        max_length=50,
                        verbose_name="Frequency",
                    ),
                ),
                (
                    "freq2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BID", "Twice daily"),
                            ("BIW", "Twice weekly"),
                            ("ONCE", "Once"),
                            ("QDAY", "Daily"),
                            ("QID", "Four times daily"),
                            ("QOTHERDAY", "Every other day"),
                            ("QWEEK", "Weekly"),
                            ("TID", "Three times daily"),
                            ("TIW", "Three times weekly"),
                        ],
                        default=None,
                        help_text="How often is the second dose taken?",
                        max_length=50,
                        null=True,
                        verbose_name="Second Frequency",
                    ),
                ),
                (
                    "freq3",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BID", "Twice daily"),
                            ("BIW", "Twice weekly"),
                            ("ONCE", "Once"),
                            ("QDAY", "Daily"),
                            ("QID", "Four times daily"),
                            ("QOTHERDAY", "Every other day"),
                            ("QWEEK", "Weekly"),
                            ("TID", "Three times daily"),
                            ("TIW", "Three times weekly"),
                        ],
                        default=None,
                        help_text="How often is the third dose taken?",
                        max_length=50,
                        null=True,
                        verbose_name="Third Frequency",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
            ],
            options={
                "verbose_name": "historical default trt",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDefaultUltTrtSettings",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "allo_ckd_fixed_dose",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use fixed dose allopurinol in CKD?",
                        verbose_name="Allopurinol CKD Fixed Dose",
                    ),
                ),
                (
                    "allo_dialysis",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use allopurinol in dialysis?",
                        verbose_name="Allopurinol in Dialysis",
                    ),
                ),
                (
                    "allo_no_ethnicity_no_hlab5801",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use allopurinol without knowing ethnicity and HLA-B*5801?",
                        verbose_name="Allopurinol / without ethnicity / HLA-B*5801",
                    ),
                ),
                (
                    "allo_risk_ethnicity_no_hlab5801",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Use allopurinol in high risk ethnicity without HLA-B*5801?",
                        verbose_name="Allopurinol / high risk ethnicity / no HLA-B*5801",
                    ),
                ),
                (
                    "febu_ckd_initial_dose",
                    models.DecimalField(
                        decimal_places=1,
                        default=Decimal("20"),
                        help_text="What is initial febuxostat dose in CKD?",
                        max_digits=5,
                        verbose_name="Initial Febuxostat CKD Dose",
                    ),
                ),
                (
                    "febu_cv_disease",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        help_text="Use febuxostat in the setting of cardiovascular disease?",
                        verbose_name="Febuxostat with cardiovascular disease?",
                    ),
                ),
                (
                    "prob_ckd_stage_contra",
                    models.IntegerField(
                        choices=[(None, "----"), (1, "I"), (2, "II"), (3, "III"), (4, "IV"), (5, "V")],
                        default=3,
                        help_text="What is the CKD stage at which probenecid is contraindicated?",
                        verbose_name="Probenecid CKD Stage Contraindication",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
            ],
            options={
                "verbose_name": "historical default ult trt settings",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
