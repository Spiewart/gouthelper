# Generated by Django 4.2.6 on 2024-07-29 15:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.datetime


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("ultaids", "0001_initial"),
        ("flareaids", "0003_initial"),
        ("goalurates", "0002_initial"),
        ("flares", "0003_initial"),
        ("ults", "0001_initial"),
        ("ppxs", "0001_initial"),
        ("medhistorys", "0003_initial"),
        ("ppxaids", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="medhistory",
            name="user",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="historicalmedhistory",
            name="flare",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="flares.flare",
            ),
        ),
        migrations.AddField(
            model_name="historicalmedhistory",
            name="flareaid",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="flareaids.flareaid",
            ),
        ),
        migrations.AddField(
            model_name="historicalmedhistory",
            name="goalurate",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="goalurates.goalurate",
            ),
        ),
        migrations.AddField(
            model_name="historicalmedhistory",
            name="history_user",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="+", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="historicalmedhistory",
            name="ppx",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ppxs.ppx",
            ),
        ),
        migrations.AddField(
            model_name="historicalmedhistory",
            name="ppxaid",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ppxaids.ppxaid",
            ),
        ),
        migrations.AddField(
            model_name="historicalmedhistory",
            name="ult",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ults.ult",
            ),
        ),
        migrations.AddField(
            model_name="historicalmedhistory",
            name="ultaid",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ultaids.ultaid",
            ),
        ),
        migrations.AddField(
            model_name="historicalmedhistory",
            name="user",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Angina",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Anticoagulation",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Bleed",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Cad",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Chf",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Ckd",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Colchicineinteraction",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Diabetes",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Erosions",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Gastricbypass",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Gout",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Heartattack",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Hepatitis",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Hypertension",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Hyperuricemia",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Ibd",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Menopause",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Organtransplant",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Osteoporosis",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Pud",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Pvd",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Stroke",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Tophi",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Uratestones",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.CreateModel(
            name="Xoiinteraction",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("medhistorys.medhistory",),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("flare__isnull", True),
                        ("flareaid__isnull", True),
                        ("goalurate__isnull", True),
                        ("ppx__isnull", True),
                        ("ppxaid__isnull", True),
                        ("ult__isnull", True),
                        ("ultaid__isnull", True),
                        ("user__isnull", False),
                    ),
                    ("user__isnull", True),
                    models.Q(
                        ("flare__isnull", True),
                        ("flareaid__isnull", True),
                        ("goalurate__isnull", True),
                        ("ppx__isnull", True),
                        ("ppxaid__isnull", True),
                        ("ult__isnull", True),
                        ("ultaid__isnull", True),
                        ("user__isnull", True),
                    ),
                    _connector="OR",
                ),
                name="medhistorys_medhistory_user_aid_exclusive",
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("set_date__isnull", False), ("set_date__lte", django.db.models.functions.datetime.Now())
                    ),
                    ("set_date__isnull", True),
                    _connector="OR",
                ),
                name="medhistorys_medhistory_set_date_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "medhistorytype__in",
                        [
                            "ANGINA",
                            "ANTICOAGULATION",
                            "BLEED",
                            "CAD",
                            "CHF",
                            "CKD",
                            "COLCHICINEINTERACTION",
                            "DIABETES",
                            "EROSIONS",
                            "GASTRICBYPASS",
                            "GOUT",
                            "HEARTATTACK",
                            "HEPATITIS",
                            "HYPERTENSION",
                            "HYPERURICEMIA",
                            "IBD",
                            "MENOPAUSE",
                            "ORGANTRANSPLANT",
                            "OSTEOPOROSIS",
                            "PUD",
                            "PVD",
                            "STROKE",
                            "TOPHI",
                            "URATESTONES",
                            "XOIINTERACTION",
                        ],
                    )
                ),
                name="medhistorys_medhistory_medhistorytype_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.UniqueConstraint(
                fields=("user", "medhistorytype"), name="medhistorys_medhistory_unique_user"
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("flare__isnull", False),
                        (
                            "medhistorytype__in",
                            [
                                "ANGINA",
                                "CAD",
                                "CHF",
                                "CKD",
                                "GOUT",
                                "HEARTATTACK",
                                "HYPERTENSION",
                                "MENOPAUSE",
                                "PVD",
                                "STROKE",
                            ],
                        ),
                    ),
                    ("flare__isnull", True),
                    _connector="OR",
                ),
                name="medhistorys_medhistory_flare_mhtype",
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("flareaid__isnull", False),
                        (
                            "medhistorytype__in",
                            [
                                "ANGINA",
                                "ANTICOAGULATION",
                                "BLEED",
                                "CAD",
                                "CHF",
                                "CKD",
                                "COLCHICINEINTERACTION",
                                "DIABETES",
                                "GASTRICBYPASS",
                                "HEARTATTACK",
                                "HYPERTENSION",
                                "IBD",
                                "ORGANTRANSPLANT",
                                "PUD",
                                "PVD",
                                "STROKE",
                            ],
                        ),
                    ),
                    ("flareaid__isnull", True),
                    _connector="OR",
                ),
                name="medhistorys_medhistory_flareaid_mhtype",
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("goalurate__isnull", False), ("medhistorytype__in", ["EROSIONS", "TOPHI"])),
                    ("goalurate__isnull", True),
                    _connector="OR",
                ),
                name="medhistorys_medhistory_goalurate_mhtype",
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("medhistorytype__in", ["GOUT"]), ("ppx__isnull", False)),
                    ("ppx__isnull", True),
                    _connector="OR",
                ),
                name="medhistorys_medhistory_ppx_mhtype",
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        (
                            "medhistorytype__in",
                            [
                                "ANGINA",
                                "ANTICOAGULATION",
                                "BLEED",
                                "CAD",
                                "CHF",
                                "CKD",
                                "COLCHICINEINTERACTION",
                                "DIABETES",
                                "GASTRICBYPASS",
                                "HEARTATTACK",
                                "HYPERTENSION",
                                "IBD",
                                "ORGANTRANSPLANT",
                                "PUD",
                                "PVD",
                                "STROKE",
                            ],
                        ),
                        ("ppxaid__isnull", False),
                    ),
                    ("ppxaid__isnull", True),
                    _connector="OR",
                ),
                name="medhistorys_medhistory_ppxaid_mhtype",
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("medhistorytype__in", ["CKD", "EROSIONS", "HYPERURICEMIA", "TOPHI", "URATESTONES"]),
                        ("ult__isnull", False),
                    ),
                    ("ult__isnull", True),
                    _connector="OR",
                ),
                name="medhistorys_medhistory_ult_mhtype",
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        (
                            "medhistorytype__in",
                            [
                                "ANGINA",
                                "CAD",
                                "CHF",
                                "CKD",
                                "HEARTATTACK",
                                "HEPATITIS",
                                "ORGANTRANSPLANT",
                                "PVD",
                                "STROKE",
                                "URATESTONES",
                                "XOIINTERACTION",
                            ],
                        ),
                        ("ultaid__isnull", False),
                    ),
                    ("ultaid__isnull", True),
                    _connector="OR",
                ),
                name="medhistorys_medhistory_ultaid_mhtype",
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.UniqueConstraint(
                fields=("flare", "medhistorytype"), name="medhistorys_medhistory_unique_flare"
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.UniqueConstraint(
                fields=("flareaid", "medhistorytype"), name="medhistorys_medhistory_unique_flareaid"
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.UniqueConstraint(
                fields=("goalurate", "medhistorytype"), name="medhistorys_medhistory_unique_goalurate"
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.UniqueConstraint(
                fields=("ppxaid", "medhistorytype"), name="medhistorys_medhistory_unique_ppxaid"
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.UniqueConstraint(
                fields=("ppx", "medhistorytype"), name="medhistorys_medhistory_unique_ppx"
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.UniqueConstraint(
                fields=("ultaid", "medhistorytype"), name="medhistorys_medhistory_unique_ultaid"
            ),
        ),
        migrations.AddConstraint(
            model_name="medhistory",
            constraint=models.UniqueConstraint(
                fields=("ult", "medhistorytype"), name="medhistorys_medhistory_unique_ult"
            ),
        ),
    ]
