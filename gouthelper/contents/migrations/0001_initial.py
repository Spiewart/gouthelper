# Generated by Django 4.2.6 on 2023-11-04 20:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import gouthelper.utils.fields
import markdownfield.models
import rules.contrib.models
import simple_history.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Content",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "context",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("FLARE", "Flare"),
                            ("FLAREAID", "FlareAid"),
                            ("GOALURATE", "GoalUrate"),
                            ("PPX", "Ppx"),
                            ("PPXAID", "PpxAid"),
                            ("TREATMENT", "Treatment"),
                            ("ULT", "Ult"),
                            ("ULTAID", "UltAid"),
                        ],
                        editable=False,
                        max_length=255,
                        null=True,
                        verbose_name="Context",
                    ),
                ),
                ("slug", models.SlugField(max_length=255)),
                (
                    "tag",
                    models.CharField(
                        blank=True,
                        choices=[("explanation", "Explanation"), ("warning", "Warning")],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("text", gouthelper.utils.fields.GouthelperMarkdownField(rendered_field="text_rendered")),
                ("text_rendered", markdownfield.models.RenderedMarkdownField()),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalContent",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "context",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("FLARE", "Flare"),
                            ("FLAREAID", "FlareAid"),
                            ("GOALURATE", "GoalUrate"),
                            ("PPX", "Ppx"),
                            ("PPXAID", "PpxAid"),
                            ("TREATMENT", "Treatment"),
                            ("ULT", "Ult"),
                            ("ULTAID", "UltAid"),
                        ],
                        editable=False,
                        max_length=255,
                        null=True,
                        verbose_name="Context",
                    ),
                ),
                ("slug", models.SlugField(max_length=255)),
                (
                    "tag",
                    models.CharField(
                        blank=True,
                        choices=[("explanation", "Explanation"), ("warning", "Warning")],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("text", gouthelper.utils.fields.GouthelperMarkdownField(rendered_field="text_rendered")),
                ("text_rendered", markdownfield.models.RenderedMarkdownField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical content",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddConstraint(
            model_name="content",
            constraint=models.UniqueConstraint(
                fields=("context", "slug", "tag"), name="contents_content_unique_slug_tag_context"
            ),
        ),
        migrations.AddConstraint(
            model_name="content",
            constraint=models.UniqueConstraint(
                condition=models.Q(("context__isnull", True), ("tag__isnull", True)),
                fields=("slug",),
                name="contents_content_unique_slug_no_tag_context",
            ),
        ),
        migrations.AddConstraint(
            model_name="content",
            constraint=models.UniqueConstraint(
                condition=models.Q(("tag__isnull", True)),
                fields=("slug", "context"),
                name="contents_content_unique_slug_context_no_tag",
            ),
        ),
        migrations.AddConstraint(
            model_name="content",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("context__in", ["FLARE", "FLAREAID", "GOALURATE", "PPX", "PPXAID", "TREATMENT", "ULT", "ULTAID"])
                ),
                name="contents_content_valid_context",
            ),
        ),
        migrations.AddConstraint(
            model_name="content",
            constraint=models.CheckConstraint(
                check=models.Q(("tag__in", ["explanation", "warning"])), name="contents_content_valid_tag"
            ),
        ),
    ]
