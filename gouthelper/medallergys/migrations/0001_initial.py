# Generated by Django 4.2.6 on 2024-07-29 15:15

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import rules.contrib.models
import simple_history.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("flareaids", "0002_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalMedAllergy",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "matype",
                    models.CharField(
                        blank=True,
                        choices=[("HYPERSENSITIVITY", "hypersensitivity"), ("OTHER", "other")],
                        help_text="Type of medication allergy.",
                        max_length=30,
                        null=True,
                        verbose_name="Medication Allergy Type",
                    ),
                ),
                (
                    "other",
                    models.CharField(
                        blank=True,
                        help_text="If the medication allergy is not in the list, enter it here.",
                        max_length=75,
                        null=True,
                        verbose_name="Other Medication Allergy",
                    ),
                ),
                (
                    "treatment",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        help_text="Medication the allergy is for.",
                        max_length=20,
                        verbose_name="Treatment Type",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
            ],
            options={
                "verbose_name": "historical med allergy",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="MedAllergy",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "matype",
                    models.CharField(
                        blank=True,
                        choices=[("HYPERSENSITIVITY", "hypersensitivity"), ("OTHER", "other")],
                        help_text="Type of medication allergy.",
                        max_length=30,
                        null=True,
                        verbose_name="Medication Allergy Type",
                    ),
                ),
                (
                    "other",
                    models.CharField(
                        blank=True,
                        help_text="If the medication allergy is not in the list, enter it here.",
                        max_length=75,
                        null=True,
                        verbose_name="Other Medication Allergy",
                    ),
                ),
                (
                    "treatment",
                    models.CharField(
                        choices=[
                            ("ALLOPURINOL", "Allopurinol"),
                            ("CELECOXIB", "Celecoxib"),
                            ("COLCHICINE", "Colchicine"),
                            ("DICLOFENAC", "Diclofenac"),
                            ("FEBUXOSTAT", "Febuxostat"),
                            ("IBUPROFEN", "Ibuprofen"),
                            ("INDOMETHACIN", "Indomethacin"),
                            ("MELOXICAM", "Meloxicam"),
                            ("METHYLPREDNISOLONE", "Methylprednisolone"),
                            ("NAPROXEN", "Naproxen"),
                            ("PREDNISONE", "Prednisone"),
                            ("PROBENECID", "Probenecid"),
                        ],
                        help_text="Medication the allergy is for.",
                        max_length=20,
                        verbose_name="Treatment Type",
                    ),
                ),
                (
                    "flareaid",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="flareaids.flareaid"
                    ),
                ),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
    ]
