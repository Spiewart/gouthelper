# Generated by Django 4.2.6 on 2024-07-29 15:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("ultaids", "0001_initial"),
        ("flareaids", "0003_initial"),
        ("medallergys", "0003_initial"),
        ("ppxaids", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="medallergy",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="medallergy_set",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AddField(
            model_name="historicalmedallergy",
            name="flareaid",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="flareaids.flareaid",
            ),
        ),
        migrations.AddField(
            model_name="historicalmedallergy",
            name="history_user",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="+", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="historicalmedallergy",
            name="ppxaid",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ppxaids.ppxaid",
            ),
        ),
        migrations.AddField(
            model_name="historicalmedallergy",
            name="ultaid",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="ultaids.ultaid",
            ),
        ),
        migrations.AddField(
            model_name="historicalmedallergy",
            name="user",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AddConstraint(
            model_name="medallergy",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("flareaid__isnull", True),
                        ("ppxaid__isnull", True),
                        ("ultaid__isnull", True),
                        ("user__isnull", False),
                    ),
                    ("user__isnull", True),
                    models.Q(
                        ("flareaid__isnull", True),
                        ("ppxaid__isnull", True),
                        ("ultaid__isnull", True),
                        ("user__isnull", True),
                    ),
                    _connector="OR",
                ),
                name="medallergys_medallergy_user_aid_exclusive",
            ),
        ),
        migrations.AddConstraint(
            model_name="medallergy",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("flareaid__isnull", False),
                        (
                            "treatment__in",
                            [
                                "CELECOXIB",
                                "COLCHICINE",
                                "DICLOFENAC",
                                "IBUPROFEN",
                                "INDOMETHACIN",
                                "METHYLPREDNISOLONE",
                                "MELOXICAM",
                                "NAPROXEN",
                                "PREDNISONE",
                            ],
                        ),
                    ),
                    ("flareaid__isnull", True),
                    _connector="OR",
                ),
                name="medallergys_medallergy_flareaid_treatment",
            ),
        ),
        migrations.AddConstraint(
            model_name="medallergy",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("ppxaid__isnull", False),
                        (
                            "treatment__in",
                            [
                                "CELECOXIB",
                                "COLCHICINE",
                                "DICLOFENAC",
                                "IBUPROFEN",
                                "INDOMETHACIN",
                                "METHYLPREDNISOLONE",
                                "MELOXICAM",
                                "NAPROXEN",
                                "PREDNISONE",
                            ],
                        ),
                    ),
                    ("ppxaid__isnull", True),
                    _connector="OR",
                ),
                name="medallergys_medallergy_ppxaid_treatment",
            ),
        ),
        migrations.AddConstraint(
            model_name="medallergy",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("treatment__in", ["ALLOPURINOL", "FEBUXOSTAT", "PROBENECID"]), ("ultaid__isnull", False)
                    ),
                    ("ultaid__isnull", True),
                    _connector="OR",
                ),
                name="medallergys_medallergy_ultaid_treatment",
            ),
        ),
        migrations.AddConstraint(
            model_name="medallergy",
            constraint=models.UniqueConstraint(
                fields=("user", "treatment"), name="medallergys_medallergy_unique_user"
            ),
        ),
        migrations.AddConstraint(
            model_name="medallergy",
            constraint=models.UniqueConstraint(
                fields=("flareaid", "treatment"), name="medallergys_medallergy_unique_flareaid"
            ),
        ),
        migrations.AddConstraint(
            model_name="medallergy",
            constraint=models.UniqueConstraint(
                fields=("ppxaid", "treatment"), name="medallergys_medallergy_unique_ppxaid"
            ),
        ),
        migrations.AddConstraint(
            model_name="medallergy",
            constraint=models.UniqueConstraint(
                fields=("ultaid", "treatment"), name="medallergys_medallergy_unique_ultaid"
            ),
        ),
        migrations.AddConstraint(
            model_name="medallergy",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "treatment__in",
                        [
                            "ALLOPURINOL",
                            "CELECOXIB",
                            "COLCHICINE",
                            "DICLOFENAC",
                            "FEBUXOSTAT",
                            "IBUPROFEN",
                            "INDOMETHACIN",
                            "MELOXICAM",
                            "METHYLPREDNISOLONE",
                            "NAPROXEN",
                            "PREDNISONE",
                            "PROBENECID",
                        ],
                    )
                ),
                name="medallergys_medallergy_treatment_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="medallergy",
            constraint=models.CheckConstraint(
                check=models.Q(("matype__in", ["HYPERSENSITIVITY", "OTHER"])),
                name="medallergys_medallergy_matype_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="medallergy",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("matype", "OTHER"), ("other__isnull", False)), ("other__isnull", True), _connector="OR"
                ),
                name="medallergys_medallergy_other_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="medallergy",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("treatment", "ALLOPURINOL"),
                        models.Q(("treatment", "FEBUXOSTAT"), ("matype__in", ["HYPERSENSITIVITY", "OTHER"])),
                        ("matype__isnull", True),
                        ("matype__isnull", True),
                        _connector="OR",
                    )
                ),
                name="medallergys_medallergy_xoi_valid",
            ),
        ),
    ]
