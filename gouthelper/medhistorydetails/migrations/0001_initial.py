# Generated by Django 4.2.6 on 2023-11-04 20:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import rules.contrib.models
import simple_history.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("medhistorys", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalGoutDetail",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "flaring",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Yes"), (False, "No")],
                        default=None,
                        help_text="Gout flare in the last 6 months?",
                        null=True,
                    ),
                ),
                (
                    "hyperuricemic",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Yes"), (False, "No")],
                        default=None,
                        help_text="Uric acid greater than 6.0 mg/dL in the past 6 months?",
                        null=True,
                    ),
                ),
                (
                    "on_ppx",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Is the patient on flare prophylaxis therapy?",
                        verbose_name="On PPx?",
                    ),
                ),
                (
                    "on_ult",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Is the patient on ULT (urate-lowering therapy)?",
                        verbose_name="On ULT?",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "medhistory",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="medhistorys.medhistory",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical gout detail",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCkdDetail",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "dialysis",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Is the patient on <a href='https://en.wikipedia.org/wiki/Hemodialysis' target='_blank'>dialysis</a>?",
                        verbose_name="Dialysis",
                    ),
                ),
                (
                    "dialysis_duration",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "---------"),
                            ("LESSTHANSIX", "Less than six months"),
                            ("LESSTHANYEAR", "Between six months and a year"),
                            ("MORETHANYEAR", "More than a year"),
                        ],
                        default=None,
                        help_text="How long since the patient started dialysis?",
                        max_length=40,
                        null=True,
                        verbose_name="Time on Dialysis",
                    ),
                ),
                (
                    "dialysis_type",
                    models.CharField(
                        blank=True,
                        choices=[("HEMODIALYSIS", "Hemodialysis"), ("PERITONEAL", "Peritoneal")],
                        default=None,
                        help_text="What type of dialysis?",
                        max_length=40,
                        null=True,
                        verbose_name="Dialysis Type",
                    ),
                ),
                (
                    "stage",
                    models.IntegerField(
                        choices=[(None, "----"), (1, "I"), (2, "II"), (3, "III"), (4, "IV"), (5, "V")],
                        help_text="What <a href='https://www.kidney.org/sites/default/files/01 -10-7278_HBG_Ckd_Stages_Flyer_GFR.gif' target='_blank'>stage</a> Ckd??",
                        verbose_name="CKD Stage",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "medhistory",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="medhistorys.medhistory",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ckd detail",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="GoutDetail",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "flaring",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Yes"), (False, "No")],
                        default=None,
                        help_text="Gout flare in the last 6 months?",
                        null=True,
                    ),
                ),
                (
                    "hyperuricemic",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Yes"), (False, "No")],
                        default=None,
                        help_text="Uric acid greater than 6.0 mg/dL in the past 6 months?",
                        null=True,
                    ),
                ),
                (
                    "on_ppx",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Is the patient on flare prophylaxis therapy?",
                        verbose_name="On PPx?",
                    ),
                ),
                (
                    "on_ult",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Is the patient on ULT (urate-lowering therapy)?",
                        verbose_name="On ULT?",
                    ),
                ),
                (
                    "medhistory",
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="medhistorys.medhistory"),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="CkdDetail",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "dialysis",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Is the patient on <a href='https://en.wikipedia.org/wiki/Hemodialysis' target='_blank'>dialysis</a>?",
                        verbose_name="Dialysis",
                    ),
                ),
                (
                    "dialysis_duration",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "---------"),
                            ("LESSTHANSIX", "Less than six months"),
                            ("LESSTHANYEAR", "Between six months and a year"),
                            ("MORETHANYEAR", "More than a year"),
                        ],
                        default=None,
                        help_text="How long since the patient started dialysis?",
                        max_length=40,
                        null=True,
                        verbose_name="Time on Dialysis",
                    ),
                ),
                (
                    "dialysis_type",
                    models.CharField(
                        blank=True,
                        choices=[("HEMODIALYSIS", "Hemodialysis"), ("PERITONEAL", "Peritoneal")],
                        default=None,
                        help_text="What type of dialysis?",
                        max_length=40,
                        null=True,
                        verbose_name="Dialysis Type",
                    ),
                ),
                (
                    "stage",
                    models.IntegerField(
                        choices=[(None, "----"), (1, "I"), (2, "II"), (3, "III"), (4, "IV"), (5, "V")],
                        help_text="What <a href='https://www.kidney.org/sites/default/files/01 -10-7278_HBG_Ckd_Stages_Flyer_GFR.gif' target='_blank'>stage</a> Ckd??",
                        verbose_name="CKD Stage",
                    ),
                ),
                (
                    "medhistory",
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="medhistorys.medhistory"),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.AddConstraint(
            model_name="ckddetail",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("dialysis", False), ("dialysis_duration__isnull", True), ("dialysis_type__isnull", True)
                    ),
                    models.Q(
                        ("dialysis", True),
                        ("dialysis_duration__isnull", False),
                        ("dialysis_type__isnull", False),
                        ("stage", 5),
                    ),
                    _connector="OR",
                ),
                name="medhistorydetails_ckddetail_dialysis_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="ckddetail",
            constraint=models.CheckConstraint(
                check=models.Q(("dialysis_duration__in", ["", "LESSTHANSIX", "LESSTHANYEAR", "MORETHANYEAR"])),
                name="medhistorydetails_ckddetail_dialysis_duration_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="ckddetail",
            constraint=models.CheckConstraint(
                check=models.Q(("dialysis_type__in", ["HEMODIALYSIS", "PERITONEAL"])),
                name="medhistorydetails_ckddetail_dialysis_type_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="ckddetail",
            constraint=models.CheckConstraint(
                check=models.Q(("stage__in", [None, 1, 2, 3, 4, 5])), name="medhistorydetails_ckddetail_stage_valid"
            ),
        ),
    ]
