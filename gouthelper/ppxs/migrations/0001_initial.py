# Generated by Django 4.2.6 on 2023-12-05 19:33

import django.core.validators
from django.db import migrations, models
import django_extensions.db.fields
import rules.contrib.models
import simple_history.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("medhistorys", "0001_initial"),
        ("labs", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalPpx",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                (
                    "indication",
                    models.IntegerField(
                        choices=[(0, "Not Indicated"), (1, "Conditionally Indicated"), (2, "Indicated")],
                        default=0,
                        help_text="Does the patient have an indication for ULT?",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(2),
                        ],
                        verbose_name="Indication",
                    ),
                ),
                (
                    "starting_ult",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Is the patient starting ULT?",
                        verbose_name="Starting ULT?",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
            ],
            options={
                "verbose_name": "historical ppx",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Ppx",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "indication",
                    models.IntegerField(
                        choices=[(0, "Not Indicated"), (1, "Conditionally Indicated"), (2, "Indicated")],
                        default=0,
                        help_text="Does the patient have an indication for ULT?",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(2),
                        ],
                        verbose_name="Indication",
                    ),
                ),
                (
                    "starting_ult",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        help_text="Is the patient starting ULT?",
                        verbose_name="Starting ULT?",
                    ),
                ),
                ("labs", models.ManyToManyField(to="labs.lab")),
                ("medhistorys", models.ManyToManyField(to="medhistorys.medhistory")),
            ],
            options={
                "abstract": False,
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
    ]
